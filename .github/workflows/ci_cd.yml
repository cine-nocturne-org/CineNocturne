name: CI-CD CineNocturne

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]
  workflow_run:
    workflows: ["Train CineNocturne"]
    types: [completed]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: cine-nocturne-ci
  cancel-in-progress: true

jobs:
  test-and-deploy:
    # si déclenché par workflow_run, ne continuer que si succès
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest || true

      - name: Run tests
        env:
          API_USERNAME: ${{ secrets.API_USERNAME }}
          API_PASSWORD: ${{ secrets.API_PASSWORD }}
          API_TOKEN:    ${{ secrets.API_TOKEN }}
          USER_LOU:     ${{ secrets.USER_LOU }}
          USER_MAX:     ${{ secrets.USER_MAX }}
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/E3_E4_API_app
          pytest E3_E4_API_app/tests --maxfail=1 --disable-warnings -q

      - name: Deploy to Render
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d2nhlbe3jp1c73cmfa00" \
            -H "Authorization: Bearer $RENDER_API_KEY"
